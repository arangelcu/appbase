apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
data:
  datasource.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus-service:9090
        isDefault: true
        editable: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /etc/grafana/provisioning/dashboards
  dashboard_controller.json: |
    {
      "id": null,
      "title": "ðŸš€ Custom Controllers Metrics",
      "tags": [
        "custom",
        "controllers",
        "business"
      ],
      "timezone": "browser",
      "panels": [
        {
          "id": 1,
          "title": "Request Rate by Controller/Action",
          "type": "graph",
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "targets": [
            {
              "expr": "rate(custom_controller_requests_total[5m])",
              "legendFormat": "{{controller}}.{{action}} ({{method}})",
              "refId": "A"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "unit": "reqps",
              "min": 0,
              "custom": {
                "drawStyle": "line",
                "lineInterpolation": "linear",
                "barAlignment": 0,
                "lineWidth": 2,
                "fillOpacity": 10,
                "gradientMode": "opacity",
                "spanNulls": false
              }
            }
          },
          "datasource": "Prometheus"
        },
        {
          "id": 6,
          "title": "Request Duration Distribution",
          "type": "heatmap",
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 8
          },
          "targets": [
            {
              "expr": "rate(custom_controller_duration_seconds_bucket[5m])",
              "legendFormat": "{{le}}",
              "format": "heatmap",
              "refId": "A"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "unit": "s",
              "color": {
                "mode": "scheme",
                "scheme": "oranges"
              }
            }
          },
          "datasource": "Prometheus"
        },
        {
          "id": 3,
          "title": "Requests by Controller",
          "type": "bargauge",
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 8
          },
          "targets": [
            {
              "expr": "sum by (controller) (custom_controller_requests_total)",
              "legendFormat": "{{controller}}",
              "format": "time_series",
              "instant": true,
              "refId": "A"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "thresholds": {
                "steps": [
                  {
                    "color": "green",
                    "value": 0
                  },
                  {
                    "color": "yellow",
                    "value": 10
                  },
                  {
                    "color": "red",
                    "value": 20
                  }
                ]
              },
              "custom": {
                "displayMode": "lcd"
              }
            }
          },
          "datasource": "Prometheus"
        },
        {
          "id": 7,
          "title": "Top Actions by Request Count",
          "type": "table",
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 16
          },
          "targets": [
            {
              "expr": "topk(10, custom_controller_requests_total)",
              "format": "table",
              "instant": true,
              "refId": "A"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "custom": {
                "displayMode": "color-text"
              }
            }
          },
          "options": {
            "showHeader": true,
            "sortBy": [
              "desc"
            ]
          },
          "datasource": "Prometheus"
        }
      ],
      "time": {
        "from": "now-1h",
        "to": "now"
      },
      "refresh": "5s"
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: "admin"
            - name: GF_USERS_ALLOW_SIGN_UP
              value: "false"
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources/datasource.yaml
              subPath: datasource.yaml
            - name: grafana-dashboards
              mountPath: /etc/grafana/provisioning/dashboards/dashboards.yaml
              subPath: dashboards.yaml
            - name: grafana-dashboards
              mountPath: /etc/grafana/provisioning/dashboards/dashboard_controller.json
              subPath: dashboard_controller.json
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
            defaultMode: 0644
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards
            defaultMode: 0644
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
spec:
  selector:
    app: grafana
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 30082
  type: NodePort
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi